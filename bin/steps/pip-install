#!/usr/bin/env bash

source $BIN_DIR/utils

export LIBRARY_PATH=/app/.apt/usr/lib:/app/.heroku/vendor/lib:$BUILD_DIR/.heroku/vendor/lib:/app/.heroku/python/lib
export LD_LIBRARY_PATH=/app/.apt/usr/lib:$HOME/.apt/usr/lib:/app/.heroku/vendor/lib:$BUILD_DIR/.heroku/vendor/lib:/app/.heroku/python/lib

# Ben added this to get libXYZ-dev packages installed via buildpack-apt
# to be used when pip packages are compiled.
EXTRA_CCFLAGS="-I/app/.apt/usr/include"
EXTRA_LDFLAGS="-L/app/.apt/usr/lib"
if [ -z "$CCFLAGS" ] ; then
  export CCFLAGS="$EXTRA_CCFLAGS"
else
  export CCFLAGS="$CCFLAGS $EXTRA_CCFLAGS"
fi
if [ -z "$LDFLAGS" ] ; then
  export LDFLAGS="$EXTRA_LDFLAGS"
else
  export LDFLAGS="$LDFLAGS $EXTRA_LDFLAGS"
fi

# Install dependencies with Pip.
puts-step "Installing dependencies with pip"

[ ! "$FRESH_PYTHON" ] && bpwatch start pip_install
[ "$FRESH_PYTHON" ] && bpwatch start pip_install_first

/app/.heroku/python/bin/pip install -r requirements.txt --exists-action=w --src=./.heroku/src --allow-all-external  | cleanup | indent

# Smart Requirements handling
cp requirements.txt .heroku/python/requirements-declared.txt
/app/.heroku/python/bin/pip freeze > .heroku/python/requirements-installed.txt

[ ! "$FRESH_PYTHON" ] && bpwatch stop pip_install
[ "$FRESH_PYTHON" ] && bpwatch stop pip_install_first

echo
